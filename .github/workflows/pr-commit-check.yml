name: Conventional commit check
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  commit-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get pull request commits
        id: commits
        run: |
          PR_COMMITS=$(gh pr view ${{ github.event.pull_request.number }} --json commits --jq '.commits[].message')
          echo "$PR_COMMITS" > commits.txt
          env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Check conventional commits
        id: check_commits
        run: |
          echo "Checking commit messages..."
          regex="^(feat|fix|docs|style|refactor|perf|test|chore|ci|build)(\(.+\))?: .+"
          invalid_commits=""
          while read -r commit; do
            if [[ ! "$commit" =~ $regex ]]; then
              invalid_commits+="$commit\n"
            fi
          done < commits.txt
          
          if [[ -n "$invalid_commits" ]]; then
            echo "Invalid commit messages found!"
            echo "INVALID_COMMITS<<EOF" >> $GITHUB_ENV
            echo -e "$invalid_commits" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            exit 1
          fi
      - name: Comment on pull request if invalid commits
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "***Invalid commit messages detected!***\n\nYour PR contains commits that do not follow the conventional commits format. Please update your commits.\n\nInvalid commits:\n```\n${{ env.INVALID_COMMITS }}\n```"
            });
      - name: Close pull request if invalid commits
        if: failure()
        run: |
          gh pr close ${{ github.event.pull_request.number }} --comment "PR closed due to invalid commit messages. Please follow the Conventional Commits format."
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}